Q1) Share of Active Users
Output share of US users that are active. Active users are the ones with an "open" status in the table fb_active_users.

A) select (1.0*SUM(CASE WHEN status = 'open' THEN 1 ELSE 0 END))/(count(*)) AS 'usa_active_users'
from fb_active_users
where lower(country) = 'usa'
----------------------------------------------------------------------------------------------------------------------------
Q2) Top Three Classes

The marketing department wants to launch a new promotion for the most successful product classes.
Find the top 3 product classes according to their number of sales. In the event of a tie, output all results.

WITH CTE AS
(
    select  op.product_class as product_class, SUM(oo.cost_in_dollars * oo.units_sold) as number_of_sales
    from online_products op
    inner join online_orders oo
    ON op.product_id = oo.product_id
    Group by op.product_class
)
Select top 3 product_class
FROM CTE
ORDER BY number_of_sales DESC

(WRONG SOLUTION - Because I wrote top 3 and the question says if there's a tie, then output all results.)
WITH CTE AS
(
    select  op.product_class as product_class, DENSE_RANK() OVER(ORDER BY SUM(oo.cost_in_dollars * oo.units_sold) DESC) as sales_order
    from online_products op
    inner join online_orders oo
    ON op.product_id = oo.product_id
    Group by op.product_class
)
Select product_class
FROM CTE
Where sales_order <=3
-------------------------------------------------------------------------------------------------------------------------------------------------
Q3) Same Brand Purchases

The marketing department is aiming its next promotion at customers who have purchased products from two particular brands: Fort West and Golden.
You have been asked to prepare a list of customers who purchased products from both brands.


With CTE AS
(
    Select oo.customer_id as customer_id, 
    SUM(Case when lower(op.brand_name) = 'fort west' THEN 1 ELSE 0 END) AS 'FW_Count',
    SUM(Case when lower(op.brand_name) = 'golden' THEN 1 ELSE 0 END) AS 'Golden_Count'
    FROM online_products op
    JOIN online_orders oo
    ON op.product_id = oo.product_id
    GROUP BY oo.customer_id
)
select customer_id
FROM CTE
Where FW_Count > 0 AND Golden_Count > 0;
-------------------------------------------------------------------------------------------------------------------------------------------------
Q4) Blocked Users
You are given a table of users who have been blocked from Facebook, together with the date, duration, and the reason for the blocking. The duration is expressed as the number of days after blocking date and if this field is empty, this means that a user is blocked permanently.
For each blocking reason, count how many users were blocked in December 2021. Include both the users who were blocked in December 2021 and those who were blocked before but remained blocked for at least a part of December 2021.

(A) select block_reason, count(user_id) as blocked_users
from fb_blocked_users
Where cast(block_date as date) >= '2021-12-01' OR 
      (ABS(DATEDIFF(day,'2021-12-01',block_date)) < block_duration)
Group by block_reason

[Takeaways -> Did not factor the null case] 
-------------------------------------------------------------------------------------------------------------------------------------------------
Q5) Number of Conversations

Count the total number of distinct conversations on WhatsApp. Two users share a conversation if there is at least 1 message between them. Multiple messages between the same pair of users are considered a single conversation.

Idea 1 - Create some sort of mechanism to duplicate table to eliminate commutative pairs and only retain (A -> B and not A -> B and B-> A)
Use UNION for this because it eliminates duplicates and appends to a row

WITH CTE AS(
	Select sender as user1, receiver as user2 
	FROM table
	UNION
	Select receiver as user1, sender as user2
	From table)
Select Count(*) 
FROM CTE
Where user1 < user2

Takeaways: The last condition helps eliminate duplicate conversations and just count exclusive pairs

Idea 2 - Concat sender - receiver to create a distinct order and count the orders to get total conversations
Using Concat with case and get distinct options

WITH CTE AS
(
	Select Distinct (CASE WHEN sender > receiver THEN CONCAT(sender,'-',receiver) ELSE CONCAT(receiver,'-',sender) END) AS pairs
	FROM Table
)
Select count(*) FROM CTE 
-------------------------------------------------------------------------------------------------------------------------------------------------
Q6) First and Last Day Promotion Results

The marketing team is evaluating the performance of their previously ran promotions.
They are particularly interested in comparing the number of transactions on the first and last day of each promotion.
Segment the results by promotion and calculate the percentage of total transactions that occurred on these days.
Your output should include the promotion ID, the percentage of transactions on the first day, and the percentage of transactions on the last day.

With cte as
(
    Select oo.promotion_id, 
                SUM( CASE WHEN oo.date_sold = osp.start_date THEN 1 ELSE 0 END) As 'first_day_sales',
                SUM( CASE WHEN oo.date_sold = osp.end_date THEN 1 ELSE 0 END) As 'last_day_sales',
                count(oo.date_sold) as total_sales
    From online_orders oo
    join online_sales_promotions osp
    ON oo.promotion_id = osp.promotion_id
    Group by oo.promotion_id
)
Select promotion_id, 100.0*(cast(first_day_sales as float)/total_sales) as start_date_percentage,
    100.0*(cast(last_day_sales as float)/total_sales) as end_date_percentage
FROM cte
-------------------------------------------------------------------------------------------------------------------------------------------------
Q7) Highest Sales with Promotions

The marketing department is assessing the success of their promotional campaigns.
You have been asked to find which products sold the most units for each promotion.
Your output should contain the promotion ID, product ID, and corresponding total sales for the most successful product ID. In the case of a tie, output all results.

With CTE AS
(
Select promotion_id, product_id, SUM(units_sold) as total_sales, 
    DENSE_RANK() OVER (PARTITION BY promotion_id ORDER BY SUM(units_sold) DESC) as sales_rank
FROM online_orders
Group by promotion_id, product_id
)
Select promotion_id, product_id, total_sales
FROM CTE
Where sales_rank = 1
-------------------------------------------------------------------------------------------------------------------------------------------------
Q8) Products Never Sold

The VP of Sales feels that some product categories don't sell and can be completely removed from the inventory.
As a first pass analysis, they want you to find what percentage of product categories have never been sold.

WITH CTE AS
(
    Select count(distinct(op.product_category)) as categories_sold 
    FROM online_products op
    JOIN online_orders oo
    ON op.product_id = oo.product_id
)
Select (1 - (cast (categories_sold as float))/(Select count(*) from online_product_categories))*100.0 as 'percentage_of_unsold_categories'
FROM CTE

Takeaways: Many solutions used Right Join. Need to understand this.
-------------------------------------------------------------------------------------------------------------------------------------------------
Q9) Top Two Media Types

You have been tasked with finding the top two single-channel media types (ranked in decreasing order) that correspond to the most money the grocery chain had spent on its promotional campaigns.
Your output should contain the media type and the total amount spent on the advertising campaign. In the event of a tie, output all results and do not skip ranks.

WITH CTE AS
(
    Select media_type, SUM(cost) as total_spent, DENSE_RANK() OVER(ORDER BY SUM(Cost) DESC) as rnk
    FROM online_sales_promotions
    Group by media_type
)
Select media_type, total_spent
FROM CTE
WHERE rnk <=2
-------------------------------------------------------------------------------------------------------------------------------------------------
Q10) Customer Consumable Sales Percentages

Following a recent advertising campaign, you have been asked to compare the sales of consumable products across all brands.
Do the comparison of the brands by finding the percentage of unique customers (among all customers in the dataset) who purchased consumable products of some brand and then do the calculation for each brand.
Your output should contain the brand_name and percentage_of_customers rounded to the nearest whole number and ordered in descending order.

select op.brand_name, ROUND(100.0*CAST(count(distinct oo.customer_id) as float)/(Select Count(DISTINCT customer_id) FROM online_orders),1) AS pc_cust
from online_orders oo
join online_products op
ON oo.product_id = op.product_id
WHERE UPPER(op.product_family) = 'CONSUMABLE'
group by op.brand_name
order by pc_cust DESC
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q11) Sales Evaluation on Media Formats

The marketing department is evaluating the most effective promotional strategies for each product family.
You have been asked to find the total sales by media type for each category as a percentage of the overall sales for that family. For example the product family ELECTRONICS could be sold 57% through INTERNET and 43% through BROADCAST.
Your output should include the product family listed alphabetically, the media type, and the calculated percentage of sales rounded to the nearest whole number ordered from highest to lowest.


With CTE_1 AS(
    Select op.product_family, osp.media_type, 
        SUM(oo.cost_in_dollars*units_sold) AS total_sales
    FROM online_sales_promotions osp
    join online_orders oo
    ON osp.promotion_id = oo.promotion_id
    join online_products op
    ON oo.product_id = op.product_id
    Group by op.product_family, osp.media_type
),
CTE_2 AS(
    Select op.product_family,  
    SUM(oo.cost_in_dollars*units_sold) AS product_fam_sales
    From online_orders oo
    join online_products op
    ON oo.product_id = op.product_id    
    Group by op.product_family
)
Select t1.product_family, t1.media_type, 100.0*(cast(t1.total_sales as float)/(t2.product_fam_sales)) as percent_sales
From CTE_1 t1
JOIN CTE_2 t2
ON t1.product_family = t2.product_family
Order by t1.product_family 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q12) Successfully Sent Messages

Find the ratio of successfully received messages to sent messages.

select (count(recv.message_id))/(Select cast(count(message_id) as float) FROM facebook_messages_received)  as ratio
from facebook_messages_sent sent
left join facebook_messages_received recv
on sent.message_id = recv.message_id;

Takeaways: (*) Found this to be easy but made mistake on right joins {Don't take it lightly}
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
